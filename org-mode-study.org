Org-mode 学习笔记[fn:1]
* 结构编辑
  1. 快捷键
     * M-RET :: 插入一个同级标题。如果光标在文本列表中，创建一个新的项（见 2.7 节 [Plain lists]）。如果处于一行的中间，这一行会被分开，后面的一部分成为新的标题。
     * M-S-RET :: 插入一个和当前标题同级的 TODO 项
     * TAB :: （新的空的条目中）	如果新的条目中还没有文字，TAB 会调整到合适的级别。
     * M-LEFT/RIGHT :: 将当前的标题提升/降低一个等级。
     * M-S-LEFT/RIGHT ::	将当前子提升/降低一个等级。
     * M-S-UP/DOWN :: 将子树上/下移（和前/后个子树交换）。
     * C-c C-w :: 将条目或区域传送到另一个文件中。见 9.2 节 [Refiling notes]。
     * C-x n s/w :: 将缓冲区视图局限到当前子树中/再次放宽视图
 
* 文本列表
  1) Org 能够识别有序列表、无序列表和描述列表。
  2) 无序列表项以‘-’、‘+’或者‘*‘开头。
  3) 有序列表项以‘1.’、‘1)’或者开头。
  4) 描述列表用‘::’将项和描述分开。
  5) 同一列表中的项的第一行必须缩进相同程度。当下一行的缩进与列表项的的开头的符号或者数字相同或者更小时，这一项就结束了。当所有的项都关上时，或者后面有两个空行时，列表就结束了。例如：
** Lord of the Rings-
   My favorite scenes are (in this order)
    * The attack of the Rohirrim
    * Eowyn's fight with the witch king
      + this was already my favorite scene in the book
      + I really like Miranda Otto.
    Important actors in this film are:
    * Elijah Wood :: He plays Frodo
    * Sean Austin :: He plays Sam, Frodo's friend.
** 当光标位于一项的第一行时（带有项标志符号的行），下面的命令将会作用于该项：
   * TAB ::	折叠项
   * M-RET :: 在当前级别插入一个项，有前缀时是强制新建一个标题
   * M-S-RET :: 插入一个带有复先框的项（见 2.5 节［复先框］）
   * M-S-UP/DOWN :: 将当前项和它的子项向上/下移动（和相同的缩进的前/后一个项交换位置）。如果列表是有序的，数字会自动改变
   * M-LEFT/M-RIGHT :: 提升/降低项的缩进，不包含子项
   * M-S-LEFT/RIGHT :: 提升/降低项的缩进，包含子项
   * C-c C-c :: 如果项中有复先框，就触发改变其状态。并且自动保持本项的符号与缩进在列表中的一致性
   * C-c - :: 循环改变将当前列表的项标志符号
** 脚注
   * 脚注 :: 就是以脚注定义符号开头的一段话，脚注定义符号是将脚注名称放在一个方括号里形成的，要求放在第0列，不能有缩进。而引用就是在正文中将脚注名称用方括号括起来。例如：
   * 例如 :: footnotes
   * 用下面的命令来处理脚注：
   * C-c C-x f :: 这是一个移动命令。当光标处理引用处时，跳转到它的定义；当光标处理定义处时，跳转到第一个引用处。其他情况下，新建一个脚注。当有前缀时，会提供一个菜单供选择操作，其中包括重新给脚注编号。
   * C-c C-c :: 在定义和引用之间跳转
   
* 表格
   1) Org 提供了快速易用的表格编辑功能。通过调用 Emacs 内嵌的 ‘calc’包（对于 Emacs 的计算器可以查看 Emacs Calculator 手册）它支持类似于制表软件的计算操作。
   2) Org 能够很容易地处理 ASCII 文本表格。任何以‘|’为首个非空字符的行都会被认为是表格的一部分。’|‘也是列分隔符。一个表格是下面的样子：
      | Name  | Phone | Age |
      |-------+-------+-----|
      | Peter |  1234 |  17 |
      | Anna  |  4321 |  25 |
   3) 当你在表格内部输入 TAB、RET 或者 C-c C-c 时表格都会自动调整。TAB 会进入下一个区域（RET 进入下一行）并且创建一个新的行。表格的缩进程度可以在第一行设定。以’|-’开头的一行会作为一个水平分隔行，当它下次调整排列时会将‘-’扩展至填充整行。所以想要建上面的那个表格，只需键入：
      | Name | Phone | Age |
      |------+-------+-----|
      |      |       |     |
   4) 然后 TAB 排列表格。还有一个更快的方法就是键入|Name|Phone|Age，再 C-c RET。
   5) 在表格区域中输入文本时，DEL、BACKSPACE 和所有其他的字符会以特殊的方式处理，防止影响到其他的区域。当按 TAB、S-TAB 或者 RET 将光标移动到其他区域时，区域中会自动填充一些空格。
** 创建和转换
   C-c | 将活动区域（选中区域）转换成一个表。如果第一行至少有一个 TAB 字符，就用 TAB 划分内容；如果第一行都有逗号，就分逗号划分内容；否则就用空白符来划分区域。如果当前没有活动区域就会建立一个空的 Org 表格。其实用|Name|Phone|Age C-c RET 来建表会更简单一点。
** 调整和区域移动
      * C-c C-c :: 调整表格，不移动光标
      * TAB :: 调整表格，将光标移到下一个区域，必要时新建一行
      * S-TAB :: 调整表格，将光标移到上一个区域
      * RET :: 调整表格，将光标移到下一行，必要时会新建一行
** 编辑行和列
  * EFT/RIGHT :: 左/右移当前列
  * M-S-LEFT ::	删除当前行
  * M-S-RIGHT :: 在光标位置左边添加一列
  * M-UP/DOWN :: 上/下移当前行
  * M-S-UP :: 删除当前行
  * M-S-DOWN :: 在当前行上面添加一行。如果有前缀，则在下面添加一行
  * C-c - :: 在当前行下面添加一个水平线。如果带前缀，则在上面添加一行水平线
  * C-c RET :: 在当前行下面添加一个水平线。并将光标移动到下一行
  * C-c ^ :: 将表排序。当前位置所在的列作为排序的依据。排序在距当前位置最近的两个水平线之间的行（或者整个表）中进行
* 超链接
** 链接格式
    1) Org 能够识别 URL 格式的文本并将它们处理成可点击的链接。通常链接格式是这样的：
       [link][description]]  或者  [[link]]
    2) 链接输入一旦完成（所有的括号都匹配），Org 就会改变它的视图。这里会看到 ”description“ 和 ”link“ ，而不是
       [[link][descriptoin]] 和 [[link]]。
    3) 要想编辑链接，可以光标置于链接上并键入 C-c C-l。
** 内部链接
    1) 如果一个链接地址并不是 URL 的形式，就会作为当前文件内部链接来处理。最重要的一个例子是  
       [[#my-custom-id]]
    它会链接到 CUSTOM_ID 属性是 “my-custom-id” 的项。
    类似
    [[My Target]]
    和
    [[My Target][Find my target]]
    的链接，点击后本文件中查找对应的目标 “<<My Target>>” 。
    * test [[test]] :: 两个中括号[[]],中间就是链接

** 外部链接
   1) Org 支持的链接格式包括文件、网页、新闻组、BBDB 数据库项、IRC 会话和记录。外部链接是 URL 格式的定位器。以识别符开头，后面跟着一个冒号，冒号后面不能有空格。下面是一些例子：
      http://www.astro.uva.nl/~dominik            on the web
      file:/home/dominik/images/jupiter.jpg       file, absolute path
      /home/dominik/images/jupiter.jpg            same as above
      file:papers/last.pdf                        file, relative path
      file:projects.org                           another Org file
      docview:papers/last.pdf::NNN                open file in doc-view mode at page NNN
      id:B7423F4D-2E8A-471B-8810-C40F074717E9     Link to heading by ID
      news:comp.emacs                             Usenet link
      mailto:adent@galaxy.net                     Mail link
      vm:folder                                   VM folder link
      vm:folder#id                                VM message link
      wl:folder#id                                WANDERLUST message link
      mhe:folder#id                               MH-E message link
      rmail:folder#id                             RMAIL message link
      gnus:group#id                               Gnus article link
      bbdb:R.*Stallman                            BBDB link (with regexp)
      irc:/irc.com/#emacs/bob                     IRC link
      info:org:External%20links                   Info node link (with encoded space)
   2) 链接的括号应当是闭合的。当链接含有描述文字是显示描述文字而不是链接地址（见 4.1 节［链接格式］），例如：
      http:www.gnu.org/software/emacs/][GNU Emacs]]
   3) 如果描述信息是一个文件名或者是指向图片的 URL。HTML 导出（见 12.4 节[HTML 导出]）时会将图片内联成一个可以点击的按钮。如果没有描述信息且链接指向一个图片，那么图片就会嵌入到导出的 HTML 文件中。
** 使用连接
   1) Org 提供了以下方法来创建和使用链接。
      - C-c l  :: 在当前位置保存一个链接。这是一个全局命令（你可以设置自己的快捷键），可以在任何类型的缓冲区中使用。链接保存下来以便以后插入 Org 文件中（见下面）
      - C-c C-l :: 插入一个链接。它会让你输入，你可以输入一个链接，也可心用上/下键来获取保存的链接。它还会让你输入描述信息。
      - C-c C-l :: （光标在链接上）	当光标处于链接上时，你可以修改链接
      - C-c C-o :: 或者 mouse-1 或者 mouse-2	打开链接
      - C-c & :: 跳回到一个已记录的地址。用 C-c % 可以将地址记录下来，内部链接后面的命令也会自动将地址记录下来。使用这个命令多次可以一直往前定位。
** 目标链接
   文件链接可以包含一些其他信息使得进入链接时可以到达特定的位置。比如双冒号之后的一个行号或者搜索选项。

   下面是一些包含搜索定位功能的链接例子以及其说明：
   1) file:~/code/main.c::255                     进入到 255 行
   2) file:~/xx.org::My Target                    找到目标‘<<My Target>>’
   3) file:~/xx.org/::#my-custom-id               查找自定义 id 的项
* 待办事项
  Org 模式并不用一个单独的文件来维持 TODO 列表2。它是一些笔记的集合体，因为 TODO 列表是在你记录笔记的过程中逐渐形成的。你 Org 模式下可以很容易地将树中的一项标记为一个 TODO 的项。用这种方式，信息内容不会冗余加倍，而且可以显示 TODO 项的上下文环境。
  当然，这种处理待办事项的方式会将它们分散于各个笔记文件中。Org 模式提供了一些方法使我们可以把它们看作一个整体来处理。
**  使用TODO状态
    当标题以 TODO 开关时它就成为了一个 TODO 项，例如：
*** TODO Wrilogbookte letter to Sam Fortune
    下面是一些使用 TODO 项的常用命令：
    + C-c C-t :: 将当前项的状态在（unmarked）->TODO->DONE 之间循环切换，同样的切换也可以在时间轴（timeline） 和议程（ agenda） 的缓冲区（buffer）中用 t 键“远程”进行。（见 2.6 节[稀疏树]）
    + S-RIGHT/LEFT :: 选择下一个/上一个 TODO 状态，与上面的循环方式相同。
    + C-c / t :: 在稀疏树中显示 TODO 项。将 buffer 折叠，但是会显示 TODO 项和它们所在的层次的标题。
    + C-c a t :: 显示全局 TODO 列表。从所有的议程文件中收集 TODO 项到一个缓冲区中。详见 10.3.2 节。
    + S-M-RET :: 在当前项下插入一个新的 TODO 项。
    + 改变 TODO 的状态会触发标签改变。查看选项 org-todo-state-tags-triggers 的描述获得更多信息。
** 多状态工作流程
   1) 你可以用 TODO 关键字来定义不同的状态，用以处理项，比如：
      setq org-todo-keywords
      '((sequence "TODO" "FEEDBACK" "VERIFY" "|" "DONE" "DELEGATED")))
   2) 竖直线将 TODO 关键字（还需要进一步的动作）和 DONE 状态（不需要进一步的动作）分隔开。如果你不给出竖直线，最后一个状态会作为 DONE 状态。设置之后，C-c C-t 就会将状态从 TODO 转换到 FEEDBACK，再转换到 VERIFY，最后到 DONE 和 DELEGATED。

   3) 有时你可能希望同时使用几个不同的 TODO 状态集合。例如，你可能想要一个基本的 TODO/DONE，以及一个修改 bug 的工作流程和一个隔开的状态来表示取消的项目（既还是 DONE，也不需要进一步的动作），你可以这样设置：
      (setq org-todo-keywords
      '((sequence "TODO(t)" "|" "DONE(d)")
      (sequence "REPORT(r)" "BUG(b)" "KNOWNCAUSE(k)" "|" "FIXED(f)")
      (sequence "|" "CANCELED(c)")))
   4) 关键字应该各不相同，这样对于一个选项 Org 才知道该用哪个状态序列（集合）。例子中也给出了快速使用一个关键字的方法，就是在关键字后面括号中给出快捷字母——当用 C-c C-t时，会询问，让你输入一个字母。
   5) 要定义只在一个文件中有效的 TODO 关键字，可以在文件中任意地方给出下面的文本：


* Footnotes

[fn:1] https://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html

		     
<<test>>		     
* link
* #my-custom-id
* My Target

